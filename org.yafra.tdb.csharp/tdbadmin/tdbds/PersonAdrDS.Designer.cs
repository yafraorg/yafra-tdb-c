//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace tdb.DS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PersonAdrDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PersonAdrDS : global::System.Data.DataSet {
        
        private persadrDataTable tablepersadr;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PersonAdrDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PersonAdrDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["persadr"] != null)) {
                    base.Tables.Add(new persadrDataTable(ds.Tables["persadr"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public persadrDataTable persadr {
            get {
                return this.tablepersadr;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PersonAdrDS cln = ((PersonAdrDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["persadr"] != null)) {
                    base.Tables.Add(new persadrDataTable(ds.Tables["persadr"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablepersadr = ((persadrDataTable)(base.Tables["persadr"]));
            if ((initTable == true)) {
                if ((this.tablepersadr != null)) {
                    this.tablepersadr.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PersonAdrDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PersonAdrDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablepersadr = new persadrDataTable();
            base.Tables.Add(this.tablepersadr);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepersadr() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PersonAdrDS ds = new PersonAdrDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void persadrRowChangeEventHandler(object sender, persadrRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class persadrDataTable : global::System.Data.TypedTableBase<persadrRow> {
            
            private global::System.Data.DataColumn columnPERS_ID;
            
            private global::System.Data.DataColumn columnADR_TYP;
            
            private global::System.Data.DataColumn columnANS;
            
            private global::System.Data.DataColumn columnADR1;
            
            private global::System.Data.DataColumn columnADR2;
            
            private global::System.Data.DataColumn columnADR3;
            
            private global::System.Data.DataColumn columnPLZ;
            
            private global::System.Data.DataColumn columnORT;
            
            private global::System.Data.DataColumn columnKANT;
            
            private global::System.Data.DataColumn columnLAND_ID;
            
            private global::System.Data.DataColumn columnSTA_ID;
            
            private global::System.Data.DataColumn columnHAUPT_FLAG;
            
            private global::System.Data.DataColumn columnRCH_FLAG;
            
            private global::System.Data.DataColumn columnMAIL_FLAG;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnHANDY;
            
            private global::System.Data.DataColumn columnFAX;
            
            private global::System.Data.DataColumn columnTLX;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnWEB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public persadrDataTable() {
                this.TableName = "persadr";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal persadrDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected persadrDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PERS_IDColumn {
                get {
                    return this.columnPERS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADR_TYPColumn {
                get {
                    return this.columnADR_TYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANSColumn {
                get {
                    return this.columnANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADR1Column {
                get {
                    return this.columnADR1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADR2Column {
                get {
                    return this.columnADR2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADR3Column {
                get {
                    return this.columnADR3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PLZColumn {
                get {
                    return this.columnPLZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORTColumn {
                get {
                    return this.columnORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KANTColumn {
                get {
                    return this.columnKANT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAND_IDColumn {
                get {
                    return this.columnLAND_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STA_IDColumn {
                get {
                    return this.columnSTA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAUPT_FLAGColumn {
                get {
                    return this.columnHAUPT_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCH_FLAGColumn {
                get {
                    return this.columnRCH_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_FLAGColumn {
                get {
                    return this.columnMAIL_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HANDYColumn {
                get {
                    return this.columnHANDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAXColumn {
                get {
                    return this.columnFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TLXColumn {
                get {
                    return this.columnTLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEBColumn {
                get {
                    return this.columnWEB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public persadrRow this[int index] {
                get {
                    return ((persadrRow)(this.Rows[index]));
                }
            }
            
            public event persadrRowChangeEventHandler persadrRowChanging;
            
            public event persadrRowChangeEventHandler persadrRowChanged;
            
            public event persadrRowChangeEventHandler persadrRowDeleting;
            
            public event persadrRowChangeEventHandler persadrRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpersadrRow(persadrRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public persadrRow AddpersadrRow(
                        int PERS_ID, 
                        int ADR_TYP, 
                        string ANS, 
                        string ADR1, 
                        string ADR2, 
                        string ADR3, 
                        string PLZ, 
                        string ORT, 
                        string KANT, 
                        int LAND_ID, 
                        int STA_ID, 
                        int HAUPT_FLAG, 
                        int RCH_FLAG, 
                        int MAIL_FLAG, 
                        string TEL, 
                        string HANDY, 
                        string FAX, 
                        string TLX, 
                        string EMAIL, 
                        string WEB) {
                persadrRow rowpersadrRow = ((persadrRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PERS_ID,
                        ADR_TYP,
                        ANS,
                        ADR1,
                        ADR2,
                        ADR3,
                        PLZ,
                        ORT,
                        KANT,
                        LAND_ID,
                        STA_ID,
                        HAUPT_FLAG,
                        RCH_FLAG,
                        MAIL_FLAG,
                        TEL,
                        HANDY,
                        FAX,
                        TLX,
                        EMAIL,
                        WEB};
                rowpersadrRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpersadrRow);
                return rowpersadrRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public persadrRow FindByPERS_IDADR_TYP(int PERS_ID, int ADR_TYP) {
                return ((persadrRow)(this.Rows.Find(new object[] {
                            PERS_ID,
                            ADR_TYP})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                persadrDataTable cln = ((persadrDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new persadrDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPERS_ID = base.Columns["PERS_ID"];
                this.columnADR_TYP = base.Columns["ADR_TYP"];
                this.columnANS = base.Columns["ANS"];
                this.columnADR1 = base.Columns["ADR1"];
                this.columnADR2 = base.Columns["ADR2"];
                this.columnADR3 = base.Columns["ADR3"];
                this.columnPLZ = base.Columns["PLZ"];
                this.columnORT = base.Columns["ORT"];
                this.columnKANT = base.Columns["KANT"];
                this.columnLAND_ID = base.Columns["LAND_ID"];
                this.columnSTA_ID = base.Columns["STA_ID"];
                this.columnHAUPT_FLAG = base.Columns["HAUPT_FLAG"];
                this.columnRCH_FLAG = base.Columns["RCH_FLAG"];
                this.columnMAIL_FLAG = base.Columns["MAIL_FLAG"];
                this.columnTEL = base.Columns["TEL"];
                this.columnHANDY = base.Columns["HANDY"];
                this.columnFAX = base.Columns["FAX"];
                this.columnTLX = base.Columns["TLX"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnWEB = base.Columns["WEB"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPERS_ID = new global::System.Data.DataColumn("PERS_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERS_ID);
                this.columnADR_TYP = new global::System.Data.DataColumn("ADR_TYP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADR_TYP);
                this.columnANS = new global::System.Data.DataColumn("ANS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANS);
                this.columnADR1 = new global::System.Data.DataColumn("ADR1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADR1);
                this.columnADR2 = new global::System.Data.DataColumn("ADR2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADR2);
                this.columnADR3 = new global::System.Data.DataColumn("ADR3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADR3);
                this.columnPLZ = new global::System.Data.DataColumn("PLZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLZ);
                this.columnORT = new global::System.Data.DataColumn("ORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORT);
                this.columnKANT = new global::System.Data.DataColumn("KANT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKANT);
                this.columnLAND_ID = new global::System.Data.DataColumn("LAND_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAND_ID);
                this.columnSTA_ID = new global::System.Data.DataColumn("STA_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTA_ID);
                this.columnHAUPT_FLAG = new global::System.Data.DataColumn("HAUPT_FLAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAUPT_FLAG);
                this.columnRCH_FLAG = new global::System.Data.DataColumn("RCH_FLAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCH_FLAG);
                this.columnMAIL_FLAG = new global::System.Data.DataColumn("MAIL_FLAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_FLAG);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnHANDY = new global::System.Data.DataColumn("HANDY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHANDY);
                this.columnFAX = new global::System.Data.DataColumn("FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX);
                this.columnTLX = new global::System.Data.DataColumn("TLX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTLX);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnWEB = new global::System.Data.DataColumn("WEB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEB);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PersonAdrDSKey1", new global::System.Data.DataColumn[] {
                                this.columnPERS_ID,
                                this.columnADR_TYP}, true));
                this.columnPERS_ID.AllowDBNull = false;
                this.columnADR_TYP.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public persadrRow NewpersadrRow() {
                return ((persadrRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new persadrRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(persadrRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.persadrRowChanged != null)) {
                    this.persadrRowChanged(this, new persadrRowChangeEvent(((persadrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.persadrRowChanging != null)) {
                    this.persadrRowChanging(this, new persadrRowChangeEvent(((persadrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.persadrRowDeleted != null)) {
                    this.persadrRowDeleted(this, new persadrRowChangeEvent(((persadrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.persadrRowDeleting != null)) {
                    this.persadrRowDeleting(this, new persadrRowChangeEvent(((persadrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepersadrRow(persadrRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PersonAdrDS ds = new PersonAdrDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "persadrDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class persadrRow : global::System.Data.DataRow {
            
            private persadrDataTable tablepersadr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal persadrRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepersadr = ((persadrDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PERS_ID {
                get {
                    return ((int)(this[this.tablepersadr.PERS_IDColumn]));
                }
                set {
                    this[this.tablepersadr.PERS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ADR_TYP {
                get {
                    return ((int)(this[this.tablepersadr.ADR_TYPColumn]));
                }
                set {
                    this[this.tablepersadr.ADR_TYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ANS {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.ANSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANS\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.ANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADR1 {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.ADR1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADR1\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.ADR1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADR2 {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.ADR2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADR2\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.ADR2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADR3 {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.ADR3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADR3\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.ADR3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PLZ {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.PLZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLZ\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.PLZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORT {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.ORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORT\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.ORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KANT {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.KANTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KANT\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.KANTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAND_ID {
                get {
                    try {
                        return ((int)(this[this.tablepersadr.LAND_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAND_ID\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.LAND_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STA_ID {
                get {
                    try {
                        return ((int)(this[this.tablepersadr.STA_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STA_ID\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.STA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HAUPT_FLAG {
                get {
                    try {
                        return ((int)(this[this.tablepersadr.HAUPT_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAUPT_FLAG\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.HAUPT_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RCH_FLAG {
                get {
                    try {
                        return ((int)(this[this.tablepersadr.RCH_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RCH_FLAG\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.RCH_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAIL_FLAG {
                get {
                    try {
                        return ((int)(this[this.tablepersadr.MAIL_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAIL_FLAG\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.MAIL_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.TELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEL\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HANDY {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.HANDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HANDY\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.HANDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.FAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAX\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TLX {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.TLXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TLX\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.TLXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WEB {
                get {
                    try {
                        return ((string)(this[this.tablepersadr.WEBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEB\' in table \'persadr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersadr.WEBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANSNull() {
                return this.IsNull(this.tablepersadr.ANSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANSNull() {
                this[this.tablepersadr.ANSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADR1Null() {
                return this.IsNull(this.tablepersadr.ADR1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADR1Null() {
                this[this.tablepersadr.ADR1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADR2Null() {
                return this.IsNull(this.tablepersadr.ADR2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADR2Null() {
                this[this.tablepersadr.ADR2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADR3Null() {
                return this.IsNull(this.tablepersadr.ADR3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADR3Null() {
                this[this.tablepersadr.ADR3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPLZNull() {
                return this.IsNull(this.tablepersadr.PLZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPLZNull() {
                this[this.tablepersadr.PLZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORTNull() {
                return this.IsNull(this.tablepersadr.ORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORTNull() {
                this[this.tablepersadr.ORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKANTNull() {
                return this.IsNull(this.tablepersadr.KANTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKANTNull() {
                this[this.tablepersadr.KANTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAND_IDNull() {
                return this.IsNull(this.tablepersadr.LAND_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAND_IDNull() {
                this[this.tablepersadr.LAND_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTA_IDNull() {
                return this.IsNull(this.tablepersadr.STA_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTA_IDNull() {
                this[this.tablepersadr.STA_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAUPT_FLAGNull() {
                return this.IsNull(this.tablepersadr.HAUPT_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAUPT_FLAGNull() {
                this[this.tablepersadr.HAUPT_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRCH_FLAGNull() {
                return this.IsNull(this.tablepersadr.RCH_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRCH_FLAGNull() {
                this[this.tablepersadr.RCH_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_FLAGNull() {
                return this.IsNull(this.tablepersadr.MAIL_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_FLAGNull() {
                this[this.tablepersadr.MAIL_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELNull() {
                return this.IsNull(this.tablepersadr.TELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELNull() {
                this[this.tablepersadr.TELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHANDYNull() {
                return this.IsNull(this.tablepersadr.HANDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHANDYNull() {
                this[this.tablepersadr.HANDYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAXNull() {
                return this.IsNull(this.tablepersadr.FAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAXNull() {
                this[this.tablepersadr.FAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTLXNull() {
                return this.IsNull(this.tablepersadr.TLXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTLXNull() {
                this[this.tablepersadr.TLXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tablepersadr.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tablepersadr.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEBNull() {
                return this.IsNull(this.tablepersadr.WEBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEBNull() {
                this[this.tablepersadr.WEBColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class persadrRowChangeEvent : global::System.EventArgs {
            
            private persadrRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public persadrRowChangeEvent(persadrRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public persadrRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591