//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace tdb.DS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SoV")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SoV : global::System.Data.DataSet {
        
        private tdbv_soDataTable tabletdbv_so;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SoV() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SoV(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tdbv_so"] != null)) {
                    base.Tables.Add(new tdbv_soDataTable(ds.Tables["tdbv_so"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tdbv_soDataTable tdbv_so {
            get {
                return this.tabletdbv_so;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SoV cln = ((SoV)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tdbv_so"] != null)) {
                    base.Tables.Add(new tdbv_soDataTable(ds.Tables["tdbv_so"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletdbv_so = ((tdbv_soDataTable)(base.Tables["tdbv_so"]));
            if ((initTable == true)) {
                if ((this.tabletdbv_so != null)) {
                    this.tabletdbv_so.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SoV";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SoV.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("en-US");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletdbv_so = new tdbv_soDataTable();
            base.Tables.Add(this.tabletdbv_so);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetdbv_so() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SoV ds = new SoV();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tdbv_soRowChangeEventHandler(object sender, tdbv_soRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tdbv_soDataTable : global::System.Data.TypedTableBase<tdbv_soRow> {
            
            private global::System.Data.DataColumn columnSO_ID;
            
            private global::System.Data.DataColumn columnBEZ_ID;
            
            private global::System.Data.DataColumn columnBEZ;
            
            private global::System.Data.DataColumn columnS_ID;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnTEXTID;
            
            private global::System.Data.DataColumn columnSTARTDAT;
            
            private global::System.Data.DataColumn columnSTOPDAT;
            
            private global::System.Data.DataColumn columnHOSTSO;
            
            private global::System.Data.DataColumn columnHOSTSOID;
            
            private global::System.Data.DataColumn columnOFFER;
            
            private global::System.Data.DataColumn columnOFFERID;
            
            private global::System.Data.DataColumn columnORD;
            
            private global::System.Data.DataColumn columnRESFLAG;
            
            private global::System.Data.DataColumn columnRESFLAGID;
            
            private global::System.Data.DataColumn columnOPERATOR;
            
            private global::System.Data.DataColumn columnOPERATORID;
            
            private global::System.Data.DataColumn columnACCOUNT;
            
            private global::System.Data.DataColumn columnINVOICE;
            
            private global::System.Data.DataColumn columnINVOICEID;
            
            private global::System.Data.DataColumn columnSEASON;
            
            private global::System.Data.DataColumn columnSEASONID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tdbv_soDataTable() {
                this.TableName = "tdbv_so";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tdbv_soDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tdbv_soDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_IDColumn {
                get {
                    return this.columnSO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BEZ_IDColumn {
                get {
                    return this.columnBEZ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BEZColumn {
                get {
                    return this.columnBEZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S_IDColumn {
                get {
                    return this.columnS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEXTIDColumn {
                get {
                    return this.columnTEXTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARTDATColumn {
                get {
                    return this.columnSTARTDAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOPDATColumn {
                get {
                    return this.columnSTOPDAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOSTSOColumn {
                get {
                    return this.columnHOSTSO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOSTSOIDColumn {
                get {
                    return this.columnHOSTSOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFFERColumn {
                get {
                    return this.columnOFFER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFFERIDColumn {
                get {
                    return this.columnOFFERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDColumn {
                get {
                    return this.columnORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESFLAGColumn {
                get {
                    return this.columnRESFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESFLAGIDColumn {
                get {
                    return this.columnRESFLAGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPERATORColumn {
                get {
                    return this.columnOPERATOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPERATORIDColumn {
                get {
                    return this.columnOPERATORID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCOUNTColumn {
                get {
                    return this.columnACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVOICEColumn {
                get {
                    return this.columnINVOICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVOICEIDColumn {
                get {
                    return this.columnINVOICEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEASONColumn {
                get {
                    return this.columnSEASON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEASONIDColumn {
                get {
                    return this.columnSEASONID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tdbv_soRow this[int index] {
                get {
                    return ((tdbv_soRow)(this.Rows[index]));
                }
            }
            
            public event tdbv_soRowChangeEventHandler tdbv_soRowChanging;
            
            public event tdbv_soRowChangeEventHandler tdbv_soRowChanged;
            
            public event tdbv_soRowChangeEventHandler tdbv_soRowDeleting;
            
            public event tdbv_soRowChangeEventHandler tdbv_soRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtdbv_soRow(tdbv_soRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tdbv_soRow Addtdbv_soRow(
                        int SO_ID, 
                        int BEZ_ID, 
                        string BEZ, 
                        int S_ID, 
                        string CODE, 
                        int TEXTID, 
                        System.DateTime STARTDAT, 
                        System.DateTime STOPDAT, 
                        string HOSTSO, 
                        int HOSTSOID, 
                        string OFFER, 
                        int OFFERID, 
                        int ORD, 
                        string RESFLAG, 
                        int RESFLAGID, 
                        string OPERATOR, 
                        int OPERATORID, 
                        string ACCOUNT, 
                        string INVOICE, 
                        int INVOICEID, 
                        string SEASON, 
                        int SEASONID) {
                tdbv_soRow rowtdbv_soRow = ((tdbv_soRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SO_ID,
                        BEZ_ID,
                        BEZ,
                        S_ID,
                        CODE,
                        TEXTID,
                        STARTDAT,
                        STOPDAT,
                        HOSTSO,
                        HOSTSOID,
                        OFFER,
                        OFFERID,
                        ORD,
                        RESFLAG,
                        RESFLAGID,
                        OPERATOR,
                        OPERATORID,
                        ACCOUNT,
                        INVOICE,
                        INVOICEID,
                        SEASON,
                        SEASONID};
                rowtdbv_soRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtdbv_soRow);
                return rowtdbv_soRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tdbv_soDataTable cln = ((tdbv_soDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tdbv_soDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSO_ID = base.Columns["SO_ID"];
                this.columnBEZ_ID = base.Columns["BEZ_ID"];
                this.columnBEZ = base.Columns["BEZ"];
                this.columnS_ID = base.Columns["S_ID"];
                this.columnCODE = base.Columns["CODE"];
                this.columnTEXTID = base.Columns["TEXTID"];
                this.columnSTARTDAT = base.Columns["STARTDAT"];
                this.columnSTOPDAT = base.Columns["STOPDAT"];
                this.columnHOSTSO = base.Columns["HOSTSO"];
                this.columnHOSTSOID = base.Columns["HOSTSOID"];
                this.columnOFFER = base.Columns["OFFER"];
                this.columnOFFERID = base.Columns["OFFERID"];
                this.columnORD = base.Columns["ORD"];
                this.columnRESFLAG = base.Columns["RESFLAG"];
                this.columnRESFLAGID = base.Columns["RESFLAGID"];
                this.columnOPERATOR = base.Columns["OPERATOR"];
                this.columnOPERATORID = base.Columns["OPERATORID"];
                this.columnACCOUNT = base.Columns["ACCOUNT"];
                this.columnINVOICE = base.Columns["INVOICE"];
                this.columnINVOICEID = base.Columns["INVOICEID"];
                this.columnSEASON = base.Columns["SEASON"];
                this.columnSEASONID = base.Columns["SEASONID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSO_ID = new global::System.Data.DataColumn("SO_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_ID);
                this.columnBEZ_ID = new global::System.Data.DataColumn("BEZ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEZ_ID);
                this.columnBEZ = new global::System.Data.DataColumn("BEZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEZ);
                this.columnS_ID = new global::System.Data.DataColumn("S_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_ID);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnTEXTID = new global::System.Data.DataColumn("TEXTID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXTID);
                this.columnSTARTDAT = new global::System.Data.DataColumn("STARTDAT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTDAT);
                this.columnSTOPDAT = new global::System.Data.DataColumn("STOPDAT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOPDAT);
                this.columnHOSTSO = new global::System.Data.DataColumn("HOSTSO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOSTSO);
                this.columnHOSTSOID = new global::System.Data.DataColumn("HOSTSOID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOSTSOID);
                this.columnOFFER = new global::System.Data.DataColumn("OFFER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFFER);
                this.columnOFFERID = new global::System.Data.DataColumn("OFFERID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFFERID);
                this.columnORD = new global::System.Data.DataColumn("ORD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORD);
                this.columnRESFLAG = new global::System.Data.DataColumn("RESFLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESFLAG);
                this.columnRESFLAGID = new global::System.Data.DataColumn("RESFLAGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESFLAGID);
                this.columnOPERATOR = new global::System.Data.DataColumn("OPERATOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATOR);
                this.columnOPERATORID = new global::System.Data.DataColumn("OPERATORID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATORID);
                this.columnACCOUNT = new global::System.Data.DataColumn("ACCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT);
                this.columnINVOICE = new global::System.Data.DataColumn("INVOICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVOICE);
                this.columnINVOICEID = new global::System.Data.DataColumn("INVOICEID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVOICEID);
                this.columnSEASON = new global::System.Data.DataColumn("SEASON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEASON);
                this.columnSEASONID = new global::System.Data.DataColumn("SEASONID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEASONID);
                this.columnSO_ID.AllowDBNull = false;
                this.columnBEZ_ID.AllowDBNull = false;
                this.columnS_ID.AllowDBNull = false;
                this.columnSTARTDAT.Caption = "ADAT";
                this.columnINVOICE.AllowDBNull = false;
                this.columnSEASON.AllowDBNull = false;
                this.columnSEASONID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tdbv_soRow Newtdbv_soRow() {
                return ((tdbv_soRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tdbv_soRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tdbv_soRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tdbv_soRowChanged != null)) {
                    this.tdbv_soRowChanged(this, new tdbv_soRowChangeEvent(((tdbv_soRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tdbv_soRowChanging != null)) {
                    this.tdbv_soRowChanging(this, new tdbv_soRowChangeEvent(((tdbv_soRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tdbv_soRowDeleted != null)) {
                    this.tdbv_soRowDeleted(this, new tdbv_soRowChangeEvent(((tdbv_soRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tdbv_soRowDeleting != null)) {
                    this.tdbv_soRowDeleting(this, new tdbv_soRowChangeEvent(((tdbv_soRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetdbv_soRow(tdbv_soRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoV ds = new SoV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tdbv_soDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tdbv_soRow : global::System.Data.DataRow {
            
            private tdbv_soDataTable tabletdbv_so;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tdbv_soRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletdbv_so = ((tdbv_soDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_ID {
                get {
                    return ((int)(this[this.tabletdbv_so.SO_IDColumn]));
                }
                set {
                    this[this.tabletdbv_so.SO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BEZ_ID {
                get {
                    return ((int)(this[this.tabletdbv_so.BEZ_IDColumn]));
                }
                set {
                    this[this.tabletdbv_so.BEZ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BEZ {
                get {
                    try {
                        return ((string)(this[this.tabletdbv_so.BEZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BEZ\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.BEZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int S_ID {
                get {
                    return ((int)(this[this.tabletdbv_so.S_IDColumn]));
                }
                set {
                    this[this.tabletdbv_so.S_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODE {
                get {
                    try {
                        return ((string)(this[this.tabletdbv_so.CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TEXTID {
                get {
                    try {
                        return ((int)(this[this.tabletdbv_so.TEXTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEXTID\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.TEXTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STARTDAT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletdbv_so.STARTDATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTDAT\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.STARTDATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STOPDAT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletdbv_so.STOPDATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOPDAT\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.STOPDATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HOSTSO {
                get {
                    try {
                        return ((string)(this[this.tabletdbv_so.HOSTSOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HOSTSO\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.HOSTSOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HOSTSOID {
                get {
                    try {
                        return ((int)(this[this.tabletdbv_so.HOSTSOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HOSTSOID\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.HOSTSOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OFFER {
                get {
                    try {
                        return ((string)(this[this.tabletdbv_so.OFFERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFFER\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.OFFERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OFFERID {
                get {
                    try {
                        return ((int)(this[this.tabletdbv_so.OFFERIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFFERID\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.OFFERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ORD {
                get {
                    try {
                        return ((int)(this[this.tabletdbv_so.ORDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORD\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.ORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESFLAG {
                get {
                    try {
                        return ((string)(this[this.tabletdbv_so.RESFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESFLAG\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.RESFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RESFLAGID {
                get {
                    try {
                        return ((int)(this[this.tabletdbv_so.RESFLAGIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESFLAGID\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.RESFLAGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPERATOR {
                get {
                    try {
                        return ((string)(this[this.tabletdbv_so.OPERATORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPERATOR\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.OPERATORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OPERATORID {
                get {
                    try {
                        return ((int)(this[this.tabletdbv_so.OPERATORIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPERATORID\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.OPERATORIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT {
                get {
                    try {
                        return ((string)(this[this.tabletdbv_so.ACCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.ACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVOICE {
                get {
                    return ((string)(this[this.tabletdbv_so.INVOICEColumn]));
                }
                set {
                    this[this.tabletdbv_so.INVOICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int INVOICEID {
                get {
                    try {
                        return ((int)(this[this.tabletdbv_so.INVOICEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INVOICEID\' in table \'tdbv_so\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletdbv_so.INVOICEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEASON {
                get {
                    return ((string)(this[this.tabletdbv_so.SEASONColumn]));
                }
                set {
                    this[this.tabletdbv_so.SEASONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SEASONID {
                get {
                    return ((int)(this[this.tabletdbv_so.SEASONIDColumn]));
                }
                set {
                    this[this.tabletdbv_so.SEASONIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBEZNull() {
                return this.IsNull(this.tabletdbv_so.BEZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBEZNull() {
                this[this.tabletdbv_so.BEZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODENull() {
                return this.IsNull(this.tabletdbv_so.CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODENull() {
                this[this.tabletdbv_so.CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEXTIDNull() {
                return this.IsNull(this.tabletdbv_so.TEXTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEXTIDNull() {
                this[this.tabletdbv_so.TEXTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARTDATNull() {
                return this.IsNull(this.tabletdbv_so.STARTDATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARTDATNull() {
                this[this.tabletdbv_so.STARTDATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOPDATNull() {
                return this.IsNull(this.tabletdbv_so.STOPDATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOPDATNull() {
                this[this.tabletdbv_so.STOPDATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOSTSONull() {
                return this.IsNull(this.tabletdbv_so.HOSTSOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOSTSONull() {
                this[this.tabletdbv_so.HOSTSOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOSTSOIDNull() {
                return this.IsNull(this.tabletdbv_so.HOSTSOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOSTSOIDNull() {
                this[this.tabletdbv_so.HOSTSOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFFERNull() {
                return this.IsNull(this.tabletdbv_so.OFFERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFFERNull() {
                this[this.tabletdbv_so.OFFERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFFERIDNull() {
                return this.IsNull(this.tabletdbv_so.OFFERIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFFERIDNull() {
                this[this.tabletdbv_so.OFFERIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORDNull() {
                return this.IsNull(this.tabletdbv_so.ORDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORDNull() {
                this[this.tabletdbv_so.ORDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESFLAGNull() {
                return this.IsNull(this.tabletdbv_so.RESFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESFLAGNull() {
                this[this.tabletdbv_so.RESFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESFLAGIDNull() {
                return this.IsNull(this.tabletdbv_so.RESFLAGIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESFLAGIDNull() {
                this[this.tabletdbv_so.RESFLAGIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPERATORNull() {
                return this.IsNull(this.tabletdbv_so.OPERATORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPERATORNull() {
                this[this.tabletdbv_so.OPERATORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPERATORIDNull() {
                return this.IsNull(this.tabletdbv_so.OPERATORIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPERATORIDNull() {
                this[this.tabletdbv_so.OPERATORIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNTNull() {
                return this.IsNull(this.tabletdbv_so.ACCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNTNull() {
                this[this.tabletdbv_so.ACCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVOICEIDNull() {
                return this.IsNull(this.tabletdbv_so.INVOICEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVOICEIDNull() {
                this[this.tabletdbv_so.INVOICEIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tdbv_soRowChangeEvent : global::System.EventArgs {
            
            private tdbv_soRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tdbv_soRowChangeEvent(tdbv_soRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tdbv_soRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591